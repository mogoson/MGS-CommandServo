<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MGS.CommandServo</name>
    </assembly>
    <members>
        <member name="T:MGS.CommandServo.MonoCommandIO">
            <summary>
            Mono Command IO.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.MonoCommandIO.ReadBuffer">
            <summary>
            Read buffer from IO.
            </summary>
            <returns>Buffer from IO.</returns>
        </member>
        <member name="M:MGS.CommandServo.MonoCommandIO.WriteBuffer(System.Byte[])">
            <summary>
            Write buffer to IO.
            </summary>
            <param name="buffer">Buffer to IO.</param>
        </member>
        <member name="T:MGS.CommandServo.MonoCommandUnit">
            <summary>
            Mono Command unit.
            </summary>
        </member>
        <member name="F:MGS.CommandServo.MonoCommandUnit.code">
            <summary>
            Code of Command unit.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.MonoCommandUnit.Code">
            <summary>
            Code of Command unit.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.MonoCommandUnit.OnRespond">
            <summary>
            On Command unit respond.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.MonoCommandUnit.Execute(System.Object[])">
            <summary>
            Execute Command.
            </summary>
            <param name="args">Command args.</param>
        </member>
        <member name="T:MGS.CommandServo.CommandManager">
            <summary>
            Manager of Commands.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandManager.CommandIO">
            <summary>
            Command IO.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandManager.CommandParser">
            <summary>
            Command parser.
            </summary>
        </member>
        <member name="F:MGS.CommandServo.CommandManager.commandBuffer">
            <summary>
            Command pending buffer.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandManager.IsSettingsValid">
            <summary>
            The settings of manager is valid?
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandManager.#ctor(MGS.CommandServo.ICommandIO,MGS.CommandServo.ICommandParser)">
            <summary>
            Constructor.
            </summary>
            <param name="commandIO">Command IO.</param>
            <param name="commandParser">Command parser.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandManager.EnqueueCommand(MGS.CommandServo.Command)">
            <summary>
            Enqueue Command to pending buffer.
            </summary>
            <param name="command">Command to enqueue.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandManager.DiscardCommand(MGS.CommandServo.Command)">
            <summary>
            Discard Command from pending buffer.
            </summary>
            <param name="command">Command to discard.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandManager.DequeueCommands">
            <summary>
            Dequeue Commands from pending buffer.
            </summary>
            <returns>Current Commands.</returns>
        </member>
        <member name="M:MGS.CommandServo.CommandManager.RespondCommand(MGS.CommandServo.Command)">
            <summary>
            Respond Command to manager.
            </summary>
            <param name="command">Command to respond.</param>
        </member>
        <member name="T:MGS.CommandServo.ICommandParser">
            <summary>
            Interface for Command parser.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandParser.ToCommands(System.Byte[])">
            <summary>
            Parser byte buffer to Commands.
            </summary>
            <param name="buffer">Buffer to parse.</param>
            <returns>Commands from buffer.</returns>
        </member>
        <member name="M:MGS.CommandServo.ICommandParser.ToBuffer(MGS.CommandServo.Command)">
            <summary>
            Parser Command to byte buffer.
            </summary>
            <param name="Command">Command to parse.</param>
            <returns>Buffer from Command.</returns>
        </member>
        <member name="T:MGS.CommandServo.ICommandIO">
            <summary>
            Interface for Command IO.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandIO.ReadBuffer">
            <summary>
            Read buffer from IO.
            </summary>
            <returns>Buffer from IO.</returns>
        </member>
        <member name="M:MGS.CommandServo.ICommandIO.WriteBuffer(System.Byte[])">
            <summary>
            Write buffer to IO.
            </summary>
            <param name="buffer">Buffer to IO.</param>
        </member>
        <member name="T:MGS.CommandServo.CommandServoProcessor">
            <summary>
            Command servo processor.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandServoProcessor.CommandManager">
            <summary>
            Manager of Commands.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandServoProcessor.CommandUnitManager">
            <summary>
            Manager of Command units.
            </summary>
        </member>
        <member name="F:MGS.CommandServo.CommandServoProcessor.commandUnitManager">
            <summary>
            Manager of Command units.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandServoProcessor.IsSettingsValid">
            <summary>
            The settings of processor is valid?
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandServoProcessor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandServoProcessor.OnUpdate">
            <summary>
            On update.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandServoProcessor.OnUnitRespond(MGS.CommandServo.Command)">
            <summary>
            On unit respond.
            </summary>
            <param name="command">Respond Command.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandServoProcessor.Initialize(MGS.CommandServo.ICommandManager,MGS.CommandServo.ICommandUnitManager)">
            <summary>
            Initialize processor.
            </summary>
            <param name="commandManager">Manager of Commands.</param>
            <param name="unitManager">Manager of Command units.</param>
        </member>
        <member name="T:MGS.CommandServo.CommandUnit">
            <summary>
            Command unit.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandUnit.Code">
            <summary>
            Code of Command unit.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandUnit.OnRespond">
            <summary>
            On Command unit respond.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandUnit.Execute(System.Object[])">
            <summary>
            Execute Command.
            </summary>
            <param name="args">Command args.</param>
        </member>
        <member name="T:MGS.CommandServo.CommandUnitManager">
            <summary>
            Manager of Command units.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.CommandUnitManager.OnRespond">
            <summary>
            On Command respond.
            </summary>
        </member>
        <member name="F:MGS.CommandServo.CommandUnitManager.units">
            <summary>
            units managed by this manager.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandUnitManager.OnUnitRespond(System.String,System.Object[])">
            <summary>
            On Command unit respond.
            </summary>
            <param name="code">Command code.</param>
            <param name="args">Command args.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandUnitManager.RegisterUnit(MGS.CommandServo.ICommandUnit)">
            <summary>
            Register Command unit.
            </summary>
            <param name="unit">Command unit.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandUnitManager.UnregisterUnit(System.String)">
            <summary>
            Unregister Command unit.
            </summary>
            <param name="code">Unit code.</param>
        </member>
        <member name="M:MGS.CommandServo.CommandUnitManager.UnregisterUnits">
            <summary>
            Unregister Command units.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.CommandUnitManager.Execute(MGS.CommandServo.Command)">
            <summary>
            Execute Command.
            </summary>
            <param name="command">Command to execute.</param>
        </member>
        <member name="T:MGS.CommandServo.ICommandManager">
            <summary>
            Interface for Command manager.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandManager.CommandIO">
            <summary>
            Command IO.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandManager.CommandParser">
            <summary>
            Command parser.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandManager.EnqueueCommand(MGS.CommandServo.Command)">
            <summary>
            Enqueue Command to pending buffer.
            </summary>
            <param name="Command">Command to enqueue.</param>
        </member>
        <member name="M:MGS.CommandServo.ICommandManager.DiscardCommand(MGS.CommandServo.Command)">
            <summary>
            Discard Command from pending buffer.
            </summary>
            <param name="Command">Command to discard.</param>
        </member>
        <member name="M:MGS.CommandServo.ICommandManager.DequeueCommands">
            <summary>
            Dequeue Commands from pending buffer.
            </summary>
            <returns>Current Commands.</returns>
        </member>
        <member name="M:MGS.CommandServo.ICommandManager.RespondCommand(MGS.CommandServo.Command)">
            <summary>
            Respond Command to manager.
            </summary>
            <param name="Command">Command to respond.</param>
        </member>
        <member name="T:MGS.CommandServo.ICommandServoProcessor">
            <summary>
            Interface for Command servo processor.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandServoProcessor.CommandManager">
            <summary>
            Manager of Commands.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandServoProcessor.CommandUnitManager">
            <summary>
            Manager of Command units.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandServoProcessor.Initialize(MGS.CommandServo.ICommandManager,MGS.CommandServo.ICommandUnitManager)">
            <summary>
            Initialize processor.
            </summary>
            <param name="CommandManager">Manager of Commands.</param>
            <param name="unitManager">Manager of Command units.</param>
        </member>
        <member name="T:MGS.CommandServo.ICommandUnit">
            <summary>
            Interface for Command Unit.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandUnit.Code">
            <summary>
            Command unit code.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandUnit.OnRespond">
            <summary>
            On Command unit respond.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandUnit.Execute(System.Object[])">
            <summary>
            Execute Command.
            </summary>
            <param name="args">Command args.</param>
        </member>
        <member name="T:MGS.CommandServo.ICommandUnitManager">
            <summary>
            Interface for Command units manager.
            </summary>
        </member>
        <member name="P:MGS.CommandServo.ICommandUnitManager.OnRespond">
            <summary>
            On Command respond.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandUnitManager.RegisterUnit(MGS.CommandServo.ICommandUnit)">
            <summary>
            Register Command unit.
            </summary>
            <param name="unit">Command unit.</param>
        </member>
        <member name="M:MGS.CommandServo.ICommandUnitManager.UnregisterUnit(System.String)">
            <summary>
            Unregister Command unit.
            </summary>
            <param name="code">Unit code.</param>
        </member>
        <member name="M:MGS.CommandServo.ICommandUnitManager.UnregisterUnits">
            <summary>
            Unregister Command units.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.ICommandUnitManager.Execute(MGS.CommandServo.Command)">
            <summary>
            Execute Command.
            </summary>
            <param name="Command">Command to execute.</param>
        </member>
        <member name="T:MGS.CommandServo.Command">
            <summary>
            Command content.
            </summary>
        </member>
        <member name="F:MGS.CommandServo.Command.code">
            <summary>
            Command unit code.
            </summary>
        </member>
        <member name="F:MGS.CommandServo.Command.args">
            <summary>
            Command args.
            </summary>
        </member>
        <member name="M:MGS.CommandServo.Command.#ctor(System.String,System.Object[])">
            <summary>
            Constructor.
            </summary>
            <param name="code">Command code.</param>
            <param name="args">Command args.</param>
        </member>
    </members>
</doc>
